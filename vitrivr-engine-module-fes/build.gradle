import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

/* Downloads the OpenAPI spec from the feature extraction server. */
tasks.register('downloadOpenApiSpec', Download) {
    src 'https://raw.githubusercontent.com/faberf/feature-extraction-server/main/openapi_spec.json'
    dest "${layout.buildDirectory.get()}/api-client-spec/openapi_spec.json"
}

/* Generates the API client based on the OpenAPI spec. */
tasks.register('generateFESClient', GenerateTask) {
    generatorName = "kotlin"
    inputSpec = "${layout.buildDirectory.get()}/api-client-spec/openapi_spec.json"
    outputDir = "${layout.buildDirectory.get()}/api-client-generated"
    id = 'vitrivr-engine-module-fes-generate-api-client'
    skipValidateSpec = true
    logToStderr = true
    generateAliasAsModel = false
    enablePostProcessFile = false

    dependsOn 'downloadOpenApiSpec'
}

compileKotlin {
    //dependsOn 'generateFESClient'
}

//sourcesJar.dependsOn 'generateFESClient'

/* Add generated Open API client as source directory. */
sourceSets {
    main {
        kotlin {
            srcDirs += "$buildDir/api-client-generated/src/main/kotlin"
        }
    }
}

dependencies {
    /* vitrivr engine features dependency. */
    implementation project(path: ':vitrivr-engine-module-features')

    /** Java CV (used for video decoding). */
    implementation group: 'com.squareup.moshi', name: 'moshi-kotlin', version: version_moshi
    implementation group: 'com.squareup.moshi', name: 'moshi-adapters', version: version_moshi

    /** OKHttp3 Client */
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: version_okhttp3
    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: version_okhttp3
}
